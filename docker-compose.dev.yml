version: '3.8'

services:
  # Single PostgreSQL instance with two databases
  postgres:
    image: postgres:15
    container_name: postgres-main
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: postgres
      SUPERTOKENS_PASSWORD: ${SUPERTOKENS_PASSWORD}
      APP_PASSWORD: ${APP_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - supertokens-network

  # SuperTokens core
  supertokens-core:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    container_name: supertokens-core
    restart: unless-stopped
    environment:
      POSTGRESQL_CONNECTION_URI: postgresql://supertokens_user:${SUPERTOKENS_PASSWORD}@postgres:5432/supertokens
    ports:
      - "3567:3567"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - supertokens-network

  # Backend application (build from source)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: supertokens-backend
    restart: unless-stopped
    environment:
      PORT: 3001
      SUPERTOKENS_CONNECTION_URI: http://supertokens-core:3567
      DATABASE_URL: postgresql://app_user:${APP_PASSWORD}@postgres:5432/supertokens_hello_world?schema=supertokenapp
      FRONTEND_URL: ${FRONTEND_URL}
      API_DOMAIN: ${API_DOMAIN}
      WEBSITE_DOMAIN: ${WEBSITE_DOMAIN}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      supertokens-core:
        condition: service_started
    networks:
      - supertokens-network

  # Frontend application (build from source)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_DOMAIN: ${API_DOMAIN}
        REACT_APP_WEBSITE_DOMAIN: ${WEBSITE_DOMAIN}
    container_name: supertokens-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - supertokens-network

volumes:
  postgres-data:

networks:
  supertokens-network:
    driver: bridge
